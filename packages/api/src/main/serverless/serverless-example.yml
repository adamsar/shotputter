service:
  name: shotput-api

plugins:
  # If you want to use custom domains, install this plugin and uncomment this section
  #- serverless-domain-manager

provider:
  name: aws
  runtime: nodejs12.x
  timeout: 30

  environment:
    SHOTPUT_SLACK_ENABLED:
    SHOTPUT_SLACK_TOKEN:
    SHOTPUT_GITHUB_ENABLED:
    SHOTPUT_GITHUB_TOKEN:
    SHOTPUT_JIRA_ENABLED:
    SHOTPUT_JIRA_USERNAME:
    SHOTPUT_JIRA_PASSWORD:
    SHOTPUT_JIRA_HOST:
    SHOTPUT_GOOGLE_ENABLED:
    SHOTPUT_GOOGLE_WEBHOOK_URL:
    SHOTPUT_IMGUR_ENABLED:
    SHOTPUT_IMGUR_CLIENT_ID:
    SHOTPUT_S3_ENABLED:
    SHOTPUT_S3_BUCKET:
    SHOTPUT_S3_PREFIX:
    SHOTPUT_CLOUDINARY_ENABLED:
    SHOTPUT_CLOUDINARY_CLOUD_NAME:
    SHOTPUT_CLOUDINARY_API_KEY:
    SHOTPUT_CLOUDINARY_API_SECRET:
    SHOTPUT_LOCAL_FILES_ENABLED:
    SHOTPUT_LOCAL_FILES_DIRECTORY:
    SHOTPUT_HOST_NAME:
    SHOTPUT_CUSTOM_IMAGE_UPLOADER_ENABLED:
    SHOTPUT_CUSTOM_IMAGE_UPLOAD_URL:

# If you want to use a custom VPC to run these lambda functions in.
#  vpc:
#    securityGroupIds:
#      -
#    subnetIds:
#      -
# Roles for posting images to s3
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action: "s3:Put*"
#      Resource: "arn:aws:s3:::${S3_BUCKET}/*"


functions:

  app:
    handler: "./lambda.handler"
    events:
      - http:
          method: ANY
          path: "/"
          cors: true

      - http:
          method: ANY
          path: "{proxy+}"
          cors: true
